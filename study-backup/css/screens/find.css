.recommended-friends {
  margin: 25px 0px;
  padding: 25px 0px;
  border-top: var(--main-border);
  border-bottom: var(--main-border);
}

.recommended-friends__title {
  font-size: 14px;
  color: rgba(0, 0, 0, 0.5);
}

.recommended-friends span {
  margin: 100px 0;
  /* span은 inline이기에 margin이 적용안됨으로 block으로 변경해줘야 한다. */
  display: block;
  text-align: center;
  font-size: 18px;
  color: rgba(0, 0, 0, 0.5);
}

.open-chat__header {
  display: flex;
  justify-content: space-between;
  /* 투명도를 조정함으로써 회색 컬러 효과를 넣을 수도 있다 */
  opacity: 0.8;
  margin-bottom: 25px;
}

.open-chat__header span {
  opacity: 0.6;
}

.open-post {
  display: flex;
  justify-content: space-between;
  align-items: center;
}

.open-post__title {
  font-weight: 600;
  margin-bottom: 7px;
}

.open-post__hashtags {
  text-transform: uppercase;
  opacity: 0.6;
}

.open-post__members {
  margin-top: 7px;
  display: flex;
  align-items: center;
}

.open-post__members img {
  width: 15px;
  height: 15px;
  border-radius: 50%;
  margin-right: 5px;
}

.open-post__member-count {
  opacity: 0.5;
  font-size: 14px;
}

.open-post__members .divider {
  /* 크기를 지정해서 직선을 만들어줄 수 있다 */
  width: 2px;
  height: 15px;
  margin: 0 5px;
  background-color: rgba(0, 0, 0, 0.2);
}

.open-post__member-status {
  color: #ffb0e0;
}

/* heart count를 absoulte로 설정하기 위해 사진에 relative를 선언한다 */
.open-post__photo {
  position: relative;
}

.open-post__photo img {
  width: 120px;
  height: 120px;
  border-radius: 10px;
}

.open-post__heart-count {
  background-color: rgba(0, 0, 0, 0.5);
  color: white;
  padding: 5px;
  border-radius: 20px;
  display: flex;
  align-items: center;
  /* 새로운 레이어 위에 표시되는 개념 */
  position: absolute;
  bottom: 10px;
  right: 10px;
  font-size: 12px;
}

.open-post__heart-count span {
  margin-left: 3px;
}

/* 하트가 뛰는 효과 */
@keyframes heartBeat {
  0% {
    color: white;
    transform: none;
  }
  50% {
    color: tomato;
    transform: scale(1.5);
  }
  100% {
    color: white;
    transform: none;
  }
}

.open-post__heart-count:hover i {
  /* 브라우저에게 에니매이션 효과를 미리 알려줌으로 효과 시작전에 미리 최적화
  그래픽 카드를 활용하여 애니메이션을 가속화. 페이지의 반응성을 향상시킨다.
  해당 레이어는 GPU에 업로드 되지만, 과도환 메모리 사용을 야기할 수 도 있다. */
  will-change: transform;
  animation: heartBeat 1s linear infinite;
}